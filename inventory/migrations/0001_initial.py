# Generated by Django 5.2.3 on 2025-06-17 04:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "unit_id",
                    models.AutoField(
                        db_column="unit_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "unit_name",
                    models.CharField(db_column="unit_name", max_length=50, unique=True),
                ),
            ],
            options={
                "db_table": "unit",
                "ordering": ["unit_name"],
            },
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "issue_id",
                    models.AutoField(
                        db_column="issue_id", primary_key=True, serialize=False
                    ),
                ),
                ("issue_date", models.DateField(db_column="issue_date")),
                ("agency_id", models.IntegerField(db_column="agency_id")),
                ("user_id", models.IntegerField(db_column="user_id")),
                (
                    "total_amount",
                    models.DecimalField(
                        db_column="total_amount", decimal_places=2, max_digits=18
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(blank=True, db_column="created_at", null=True),
                ),
            ],
            options={
                "db_table": "issue",
                "ordering": ["-issue_date"],
                "indexes": [
                    models.Index(fields=["agency_id"], name="issue_agency__388f46_idx"),
                    models.Index(fields=["user_id"], name="issue_user_id_175c8b_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Receipt",
            fields=[
                (
                    "receipt_id",
                    models.AutoField(
                        db_column="receipt_id", primary_key=True, serialize=False
                    ),
                ),
                ("receipt_date", models.DateField(db_column="receipt_date")),
                ("user_id", models.IntegerField(db_column="user_id")),
                ("agency_id", models.IntegerField(db_column="agency_id")),
                (
                    "total_amount",
                    models.DecimalField(
                        db_column="total_amount", decimal_places=2, max_digits=18
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(blank=True, db_column="created_at", null=True),
                ),
            ],
            options={
                "db_table": "receipt",
                "ordering": ["-receipt_date"],
                "indexes": [
                    models.Index(fields=["user_id"], name="receipt_user_id_3ca007_idx"),
                    models.Index(
                        fields=["agency_id"], name="receipt_agency__80e1f7_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "item_id",
                    models.AutoField(
                        db_column="item_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "item_name",
                    models.CharField(
                        db_column="item_name", max_length=150, unique=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_column="price",
                        decimal_places=2,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(db_column="stock_quantity"),
                ),
                (
                    "description",
                    models.TextField(blank=True, db_column="description", null=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(blank=True, db_column="created_at", null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_column="updated_at", null=True),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        db_column="unit_id",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="items",
                        to="inventory.unit",
                    ),
                ),
            ],
            options={
                "db_table": "item",
                "ordering": ["item_name"],
            },
        ),
        migrations.CreateModel(
            name="IssueDetail",
            fields=[
                (
                    "issue_detail_id",
                    models.AutoField(
                        db_column="issue_detail_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        db_column="quantity",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        db_column="unit_price",
                        decimal_places=2,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        db_column="line_total",
                        decimal_places=2,
                        max_digits=18,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        db_column="issue_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="inventory.issue",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        db_column="item_id",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="issue_details",
                        to="inventory.item",
                    ),
                ),
            ],
            options={
                "db_table": "issuedetail",
                "ordering": ["issue", "item"],
                "indexes": [
                    models.Index(
                        fields=["issue"], name="issuedetail_issue_i_95093c_idx"
                    ),
                    models.Index(
                        fields=["item"], name="issuedetail_item_id_624d31_idx"
                    ),
                ],
                "unique_together": {("issue", "item")},
            },
        ),
        migrations.CreateModel(
            name="ReceiptDetail",
            fields=[
                (
                    "receipt_detail_id",
                    models.AutoField(
                        db_column="receipt_detail_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        db_column="quantity",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        db_column="unit_price",
                        decimal_places=2,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        db_column="line_total",
                        decimal_places=2,
                        max_digits=18,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        db_column="item_id",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="receipt_details",
                        to="inventory.item",
                    ),
                ),
                (
                    "receipt",
                    models.ForeignKey(
                        db_column="receipt_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="inventory.receipt",
                    ),
                ),
            ],
            options={
                "db_table": "receiptdetail",
                "ordering": ["receipt", "item"],
                "indexes": [
                    models.Index(
                        fields=["receipt"], name="receiptdeta_receipt_11a2b4_idx"
                    ),
                    models.Index(
                        fields=["item"], name="receiptdeta_item_id_7e8259_idx"
                    ),
                ],
                "unique_together": {("receipt", "item")},
            },
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["unit"], name="item_unit_id_71daea_idx"),
        ),
    ]
