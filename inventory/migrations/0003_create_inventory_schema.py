# Generated by Django 5.2.3 on 2025-06-29 13:47

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_alter_issue_options_alter_issuedetail_options_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
            CREATE SCHEMA IF NOT EXISTS inventory;

            CREATE TABLE IF NOT EXISTS "inventory"."unit" (
                unit_id SERIAL PRIMARY KEY,
                unit_name VARCHAR(50) UNIQUE NOT NULL
            );

            CREATE TABLE IF NOT EXISTS "inventory"."item" (
                item_id SERIAL PRIMARY KEY,
                item_name VARCHAR(150) UNIQUE NOT NULL,
                unit_id INTEGER NOT NULL REFERENCES "inventory"."unit"(unit_id) ON DELETE RESTRICT,
                price NUMERIC(15, 2) NOT NULL CHECK (price > 0),
                stock_quantity INTEGER NOT NULL CHECK (stock_quantity >= 0),
                description TEXT,
                created_at TIMESTAMPTZ DEFAULT NOW(),
                updated_at TIMESTAMPTZ DEFAULT NOW()
            );

            CREATE TABLE IF NOT EXISTS "inventory"."receipt" (
                receipt_id SERIAL PRIMARY KEY,
                receipt_date DATE NOT NULL,
                user_id INTEGER NOT NULL,
                agency_id INTEGER NOT NULL,
                total_amount NUMERIC(18, 2) NOT NULL,
                created_at TIMESTAMPTZ DEFAULT NOW()
            );

            CREATE TABLE IF NOT EXISTS "inventory"."receiptdetail" (
                receipt_detail_id SERIAL PRIMARY KEY,
                receipt_id INTEGER NOT NULL REFERENCES "inventory"."receipt"(receipt_id) ON DELETE CASCADE,
                item_id INTEGER NOT NULL REFERENCES "inventory"."item"(item_id) ON DELETE RESTRICT,
                quantity INTEGER NOT NULL CHECK (quantity > 0),
                unit_price NUMERIC(15, 2) NOT NULL CHECK (unit_price > 0),
                line_total NUMERIC(18, 2) NOT NULL CHECK (line_total > 0),
                UNIQUE (receipt_id, item_id)
            );

            CREATE TABLE IF NOT EXISTS "inventory"."issue" (
                issue_id SERIAL PRIMARY KEY,
                issue_date DATE NOT NULL,
                agency_id INTEGER NOT NULL,
                user_id INTEGER NOT NULL,
                total_amount NUMERIC(18, 2) NOT NULL,
                status VARCHAR(20) NOT NULL DEFAULT 'processing',
                status_reason TEXT,
                created_at TIMESTAMPTZ DEFAULT NOW()
            );

            CREATE TABLE IF NOT EXISTS "inventory"."issuedetail" (
                issue_detail_id SERIAL PRIMARY KEY,
                issue_id INTEGER NOT NULL REFERENCES "inventory"."issue"(issue_id) ON DELETE CASCADE,
                item_id INTEGER NOT NULL REFERENCES "inventory"."item"(item_id) ON DELETE RESTRICT,
                quantity INTEGER NOT NULL CHECK (quantity > 0),
                unit_price NUMERIC(15, 2) NOT NULL CHECK (unit_price > 0),
                line_total NUMERIC(18, 2) NOT NULL CHECK (line_total > 0),
                UNIQUE (issue_id, item_id)
            );
            """,
            reverse_sql="""
            DROP TABLE IF EXISTS "inventory"."issuedetail";
            DROP TABLE IF EXISTS "inventory"."issue";
            DROP TABLE IF EXISTS "inventory"."receiptdetail";
            DROP TABLE IF EXISTS "inventory"."receipt";
            DROP TABLE IF EXISTS "inventory"."item";
            DROP TABLE IF EXISTS "inventory"."unit";
            DROP SCHEMA IF EXISTS inventory;
            """
        )
    ]
